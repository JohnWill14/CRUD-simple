/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.janelas;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.dao.CategoriaDao;

/**
 *
 * @author usuario
 */
public class Categoria extends javax.swing.JInternalFrame {

    /**
     * Creates new form Categoria
     */
    public Categoria() {
        initComponents();
        this.myCustomization();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        iDLabel = new javax.swing.JLabel();
        idText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        nomeText = new javax.swing.JTextField();
        limparButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        novoButton = new javax.swing.JButton();
        salvarButton = new javax.swing.JButton();
        excluirButton = new javax.swing.JButton();
        sairButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        js = new javax.swing.JScrollPane();
        tabelaCategoria = new javax.swing.JTable();
        textText = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setTitle("Categorias");
        setMaximumSize(new java.awt.Dimension(396, 463));
        setMinimumSize(new java.awt.Dimension(396, 463));
        getContentPane().setLayout(null);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Formul√°rio"));
        jPanel2.setLayout(null);

        iDLabel.setText("ID");
        jPanel2.add(iDLabel);
        iDLabel.setBounds(30, 20, 14, 15);

        idText.setEditable(false);
        jPanel2.add(idText);
        idText.setBounds(110, 20, 70, 23);

        jLabel1.setText("Nome");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(20, 60, 40, 15);

        nomeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeTextActionPerformed(evt);
            }
        });
        jPanel2.add(nomeText);
        nomeText.setBounds(110, 60, 140, 23);

        limparButton.setText("Limpar");
        limparButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparButtonActionPerformed(evt);
            }
        });
        jPanel2.add(limparButton);
        limparButton.setBounds(290, 10, 78, 31);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 60, 390, 130);

        novoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/midia/img/novo.png"))); // NOI18N
        novoButton.setText("Novo");
        novoButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        novoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoButtonActionPerformed(evt);
            }
        });
        jPanel1.add(novoButton);

        salvarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/midia/img/salvar.png"))); // NOI18N
        salvarButton.setText("Salvar");
        salvarButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        salvarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarButtonActionPerformed(evt);
            }
        });
        jPanel1.add(salvarButton);

        excluirButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/midia/img/excluir.png"))); // NOI18N
        excluirButton.setText("Excluir");
        excluirButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        excluirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirButtonActionPerformed(evt);
            }
        });
        jPanel1.add(excluirButton);

        sairButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/midia/img/cancelar.png"))); // NOI18N
        sairButton.setText("Sair");
        sairButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sairButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        sairButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairButtonActionPerformed(evt);
            }
        });
        jPanel1.add(sairButton);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 10, 400, 60);

        jPanel3.setLayout(new java.awt.CardLayout());

        tabelaCategoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Teste", "Teste"}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        tabelaCategoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaCategoriaMouseClicked(evt);
            }
        });
        tabelaCategoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaCategoriaKeyReleased(evt);
            }
        });
        js.setViewportView(tabelaCategoria);

        jPanel3.add(js, "card2");

        getContentPane().add(jPanel3);
        jPanel3.setBounds(0, 230, 400, 210);

        textText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textTextKeyReleased(evt);
            }
        });
        getContentPane().add(textText);
        textText.setBounds(0, 200, 270, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sairButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairButtonActionPerformed
        // TODO add your handling code here:
       this.dispose();
    }//GEN-LAST:event_sairButtonActionPerformed

    private void salvarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarButtonActionPerformed
        // TODO add your handling code here:
        altCategoria();
        limpaCampo();
    }//GEN-LAST:event_salvarButtonActionPerformed

    private void nomeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeTextActionPerformed

    private void tabelaCategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaCategoriaMouseClicked
        // TODO add your handling code here:
        selecionaRow();
    }//GEN-LAST:event_tabelaCategoriaMouseClicked

    private void tabelaCategoriaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaCategoriaKeyReleased
        // TODO add your handling code here:
        selecionaRow();
    }//GEN-LAST:event_tabelaCategoriaKeyReleased

    private void novoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoButtonActionPerformed
        // TODO add your handling code here:
        criaCategoria();
        limpaCampo();
    }//GEN-LAST:event_novoButtonActionPerformed

    private void excluirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirButtonActionPerformed
        // TODO add your handling code here:
        excCategoria();
        limpaCampo();
    }//GEN-LAST:event_excluirButtonActionPerformed

    private void limparButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparButtonActionPerformed
        // TODO add your handling code here:
        limpaCampo();
        completaTabela();
    }//GEN-LAST:event_limparButtonActionPerformed

    private void textTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textTextKeyReleased
        // TODO add your handling code here:
        completaTabela(textText.getText());
        limpaCampo();
    }//GEN-LAST:event_textTextKeyReleased

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton excluirButton;
    private javax.swing.JLabel iDLabel;
    private javax.swing.JTextField idText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane js;
    private javax.swing.JButton limparButton;
    private javax.swing.JTextField nomeText;
    private javax.swing.JButton novoButton;
    private javax.swing.JButton sairButton;
    private javax.swing.JButton salvarButton;
    private javax.swing.JTable tabelaCategoria;
    private javax.swing.JTextField textText;
    // End of variables declaration//GEN-END:variables
    public List<model.bean.Categoria> listaCategoria;
    public CategoriaDao catDao;
    public DefaultTableModel modelTable;
    public void myCustomization(){
        catDao=new CategoriaDao();
        criaTabela();
        completaTabela();
    }
    public void criaTabela(){
        modelTable=new DefaultTableModel(new Object[][]{}, new String[]{
            "ID","NOME"
        });
        tabelaCategoria.setModel(modelTable);
    }
    public void completaTabela(){
        limpaTabela();
        listaCategoria=catDao.findAll();
        for(model.bean.Categoria cat:listaCategoria){
            modelTable.addRow(new Object[]{
                cat.getId(),cat.getNome()
            });
        }
    }
    public void completaTabela(String str){
        limpaTabela();
        listaCategoria=catDao.findAll(str);
        for(model.bean.Categoria cat:listaCategoria){
            modelTable.addRow(new Object[]{
                cat.getId(),cat.getNome()
            });
        }
    }
    public void limpaTabela(){
        int tam=modelTable.getRowCount();
        for(int i=0;i<tam;i++)
        modelTable.removeRow(0);
    }
    public void selecionaRow(){
        if(tabelaCategoria.getSelectedRow()!=-1){
            int row=tabelaCategoria.getSelectedRow();
            nomeText.setText(modelTable.getValueAt(row,1).toString());
            idText.setText(modelTable.getValueAt(row, 0).toString());
        }
    }
    public boolean verificaCampo(){
        return !nomeText.getText().equals("");
    }
    public  void limpaCampo(){
        nomeText.setText("");
        idText.setText("");
    }
    public model.bean.Categoria pegaCategoria(){
        model.bean.Categoria cat=new model.bean.Categoria();
        if(verificaCampo()){
            if(!idText.getText().equals(""))
                cat.setId(Integer.parseInt(idText.getText()));
            else cat.setId(0);
            cat.setNome(nomeText.getText());
        }else{
            JOptionPane.showMessageDialog(this, "Campo nome n√£o est√° preenchido");
            cat=null;
        }
        return cat;
    }
    public void criaCategoria(){
        model.bean.Categoria cat =pegaCategoria();
        if(cat==null) return;
        catDao.save(cat);
        completaTabela();
       // System.out.println("OLA");
    }
    public void altCategoria(){
        model.bean.Categoria cat =pegaCategoria();
        if(cat.getId()==0){
            JOptionPane.showMessageDialog(this, "Selecione uma categoria");
            return;
        }
        if(cat==null) return;
        catDao.update(cat);
        completaTabela();
       // System.out.println("OLA");
    }
    public void excCategoria(){
        model.bean.Categoria cat= this.pegaCategoria();
        System.out.println("ID "+cat.getId());
         if(cat.getId()==0){
            JOptionPane.showMessageDialog(this, "Selecione uma categoria");
            return;
        }
         try {
             catDao.deletar(cat.getId());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Nao foi possivel excluir:\n"+
                    "Tavez tenha algum produto registrado na mesma.");
        }
        
        completaTabela();
    }
}
